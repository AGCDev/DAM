1. Número e importe de todos los pedidos realizados en los últimos 60 días.

SELECT PEDIDOS.NUM, PEDIDOS.TOTAL FROM PEDIDOS WHERE PEDIDOS.FECHA BETWEEN SYSDATE -60 AND SYSDATE; //LAS COLUMNAS SALEN VACIAS PORQUE SYSDATE ES LA FECHA ACTUAL Y EL ULTIMO PEDIDO FUE HACE MUCHO MAS DE 60 DIAS

2. 	Número e importe de los pedidos cuyo  importe esté entre 100 y 200 €.

SELECT PEDIDOS.NUM, PEDIDOS.TOTAL FROM PEDIDOS WHERE TOTAL BETWEEN 100 AND 200;

3. 	Código y nombre de los productos ordenados ascendentemente por precio y nombre.

SELECT CODIGO, PRECIO, NOMBRE FROM PRODUCTOS ORDER BY PRECIO, NOMBRE;

4. 	Número total  de productos que vende la empresa (en la columna debe aparecer “Nº de productos”).

SELECT PRODUCTOS.CODIGO AS "Nº de productos" FROM PRODUCTOS; //AS SIRVE PARA CAMBIARLE EL NOMBRE A LA COLUMNA (FACILITAR SU LEGIBILIDAD)

5. 	Número total de productos que no han sido pedidos.

SELECT COUNT(*) FROM PRODUCTOS WHERE CODIGO NOT IN (SELECT DISTINCT(PRODUCTO) FROM LINEAS);

6. 	De cada pedido, mostrar su número, importe y datos del cliente.

SELECT LINEAS.NUM_PEDIDO AS NUMERO_DE_PEDIDO, SUM(LINEAS.IMPORTE) AS IMPORTE_TOTAL, CLIENTES.CODIGO AS CODIGO_CLIENTE, CLIENTES.NOMBRE, CLIENTES.APELLIDOS, CLIENTES.EDAD FROM LINEAS INNER JOIN PEDIDOS ON LINEAS.NUM_PEDIDO = PEDIDOS.NUM INNER JOIN CLIENTES ON PEDIDOS.CLIENTE = CLIENTES.CODIGO GROUP BY LINEAS.NUM_PEDIDO, CLIENTES.CODIGO, CLIENTES.NOMBRE, CLIENTES.APELLIDOS, CLIENTES.EDAD;

7. 	Código, nombre  del cliente y número total de pedidos que ha hecho cada cliente, ordenado de más a menos  pedidos.

SELECT CLIENTES.CODIGO, CLIENTES.NOMBRE, PEDIDOS.TOTAL, PEDIDOS.NUM AS "Nº de pedido" FROM CLIENTES INNER JOIN PEDIDOS ON CLIENTES.CODIGO = PEDIDOS.CLIENTE ORDER BY PEDIDOS.TOTAL DESC;

8. 	Código, nombre y número total de pedidos de los clientes que han realizado más de un pedido.

SELECT CLIENTES.CODIGO, CLIENTES.NOMBRE, COUNT(PEDIDOS.NUM) AS "Nº total de pedidos" FROM CLIENTES INNER JOIN PEDIDOS ON CLIENTES.CODIGO = PEDIDOS.CLIENTE GROUP BY CLIENTES.CODIGO, CLIENTES.NOMBRE HAVING COUNT(PEDIDOS.NUM) > 1 ORDER BY CLIENTES.CODIGO, CLIENTES.NOMBRE; 

9. 	Para cada pedido mostrar su número, código  del cliente y  nº total de líneas que tiene .

SELECT PEDIDOS.NUM AS NUMERO_DE_PEDIDO, PEDIDOS.CLIENTE AS CODIGO_CLIENTE, SUM(LINEAS.CANTIDAD) AS Nº_TOTAL_DE_LINEAS FROM PEDIDOS INNER JOIN LINEAS ON PEDIDOS.NUM = LINEAS.NUM_PEDIDO GROUP BY PEDIDOS.NUM, PEDIDOS.CLIENTE;   

10.	Para cada cliente  mostrar su código, nombre , numero  e importe del cada uno de sus pedidos.

SELECT CLIENTES.CODIGO, CLIENTES.NOMBRE, PEDIDOS.NUM AS "Nº de pedido", PEDIDOS.TOTAL as "Precio total del pedido" FROM CLIENTES INNER JOIN PEDIDOS ON CLIENTES.CODIGO = PEDIDOS.CLIENTE;

11.	Para cada cliente  menor de edad mostrar su código y nombre, el importe más alto, el más bajo  de los pedidos que ha realizado.

SELECT CLIENTES.CODIGO, CLIENTES.NOMBRE, MAX(PEDIDOS.TOTAL), MIN(PEDIDOS.TOTAL) FROM CLIENTES INNER JOIN PEDIDOS ON CLIENTES.CODIGO = PEDIDOS.CLIENTE WHERE CLIENTES.EDAD < 18 GROUP BY CLIENTES.CODIGO, CLIENTES.NOMBRE; //SOLO HAY 2 CLIENTES MENORES DE EDAD Y SOLO HACE 1 PEDIDO CADA UNO DE ELLOS

12.	Mostrar el código del producto, el nº de veces que ha sido pedido y la cantidad total de unidades que se han pedido (los que no hayan sido pedidos también deben ser mostrados con estos valores a 0) (combinación externa).

SELECT LINEAS.PRODUCTO AS CODIGO_PRODUCTO, PEDIDOS.NUM AS CODIGO_PEDIDO, PEDIDOS.FECHA, NVL(PEDIDOS.GASTOS_ENVIO, 0), PEDIDOS.TOTAL, PEDIDOS.FECHA_PREVISTA, PEDIDOS.CLIENTE, COUNT(DISTINCT LINEAS.PRODUCTO) AS "VECES_PEDIDO", LINEAS.CANTIDAD FROM LINEAS LEFT OUTER JOIN PEDIDOS ON LINEAS.NUM_PEDIDO = PEDIDOS.NUM GROUP BY LINEAS.PRODUCTO, PEDIDOS.NUM, PEDIDOS.FECHA, NVL(PEDIDOS.GASTOS_ENVIO, 0), PEDIDOS.TOTAL, 
PEDIDOS.FECHA_PREVISTA, PEDIDOS.CLIENTE, LINEAS.CANTIDAD; 

13.	Datos del producto del que más unidades  se han pedido.

SELECT PRODUCTOS.CODIGO,PRODUCTOS.NOMBRE,PRODUCTOS.PRECIO FROM (
SELECT PRODUCTO AS LP,SUM(LINEAS.CANTIDAD) AS CANTIDAD FROM LINEAS GROUP BY PRODUCTO ORDER BY SUM(LINEAS.CANTIDAD) DESC
),PRODUCTOS WHERE LP=PRODUCTOS.CODIGO AND ROWNUM=1;


14.     Cantidad  total gastada y código de cliente  de los que menos  han  gastado en 2016.

SELECT CLIENTE, TOTAL, FECHA FROM PEDIDOS WHERE TOTAL=45 GROUP BY CLIENTE, FECHA, TOTAL HAVING FECHA BETWEEN '01-01-2016' AND '31-12-2016'; //CONSULTANDO PREVIAMENTE CUAL ES EL GASTO TOTAL MAS PEQUEÑO (45) DEL AÑO 2016... ESE AGRUPAMIENTO ES OBLIGATORIO POR SQL DEVELOPER. ME DABA EL MISMO RESULTADO USANDO MIN(TOTAL) Y MAX(TOTAL), POR LO QUE ACABÉ USANDO ESTE ULTIMO CÓDIGO.


15.     Para cada cliente mostrar su código y la suma total de sus pedidos y gastos de envÍo.

SELECT CLIENTE,TOTAL+GASTOS FROM (SELECT CLIENTE,SUM(TOTAL) AS TOTAL,NVL(SUM(GASTOS_ENVIO),0) AS GASTOS FROM PEDIDOS GROUP BY CLIENTE);

16.     Sentencia que muestre los productos con este formato.

SELECT PRODUCTOS.CODIGO AS CODIGO_PROD, PRODUCTOS.NOMBRE, PRODUCTOS.PRECIO FROM PRODUCTOS WHERE ROWNUM <= 4;

17.     Escribe los datos de los pedidos  y su clientes  con el siguiente formato:

SELECT PEDIDOS.NUM AS "Nº Pedido", PEDIDOS.FECHA AS "Fecha Pedido", CLIENTES.APELLIDOS ||','|| CLIENTES.NOMBRE AS "Nombre Completo" FROM PEDIDOS INNER JOIN CLIENTES ON PEDIDOS.CLIENTE = CLIENTES.CODIGO WHERE ROWNUM <=5;

18.     (Solo con subconsultas, sin combinar tablas) Datos de los clientes que han pedido el producto de nombre ‘PANTALON’.

SELECT CODIGO,nombre,apellidos,edad,UPPER('pantalon') as pedido FROM CLIENTES WHERE CLIENTES.CODIGO IN (SELECT PEDIDOS.CLIENTE FROM LINEAS,PRODUCTOS,PEDIDOS WHERE LINEAS.PRODUCTO=PRODUCTOS.CODIGO AND PEDIDOS.NUM=LINEAS.NUM_PEDIDO AND PRODUCTOS.NOMBRE LIKE '%PANTA%');


19.     (Sin subconsultas) Datos de los clientes que han pedido el producto de nombre ‘PANTALON’.

SELECT CLIENTES.CODIGO AS COD_CLIENTE, CLIENTES.NOMBRE AS NOMBRE_CLIENTE, CLIENTES.APELLIDOS, CLIENTES.EDAD, PRODUCTOS.NOMBRE AS PRODUCTO_ADQUIRIDO FROM CLIENTES INNER JOIN PEDIDOS ON CLIENTES.CODIGO = PEDIDOS.CLIENTE INNER JOIN LINEAS ON PEDIDOS.NUM = LINEAS.NUM_PEDIDO INNER JOIN PRODUCTOS ON LINEAS.PRODUCTO = PRODUCTOS.CODIGO WHERE PRODUCTOS.NOMBRE LIKE 'P%N';


20.     Para cada cliente, mostrar los datos del pedido cuyo importe  sea superior al importe medio  de sus pedidos.

SELECT A.CLIENTE, A.TOTAL FROM PEDIDOS A, SELECT PEDIDOS.CLIENTE, AVG(TOTAL) AS MEDIA FROM PEDIDOS GROUP BY PEDIDOS.CLIENTE) B WHUERE A.CLIENTE = B.CLIENTE AND A.TOTAL > B.MEDIA;